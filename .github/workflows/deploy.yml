name: Wildfly s2i Image Deployment when a new version tag is created.
on:
  workflow_dispatch: {}
  push:
    branches:
      - "!*"
    tags:
      - "v*"
env:
  LANG: en_US.UTF-8
  S2I_URI: https://api.github.com/repos/openshift/source-to-image/releases/latest
  HELM_URI: https://api.github.com/repos/helm/helm/releases/latest
  CEKIT_VERSION: 3.2.1
  QUAY_REPO: ${{ secrets.QUAY_REPO }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
jobs:
  wfci:
    name: Wildfly-s2i Image Deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check quay.io configuration
        if: env.QUAY_USERNAME == '' || env.QUAY_REPO == ''
        run: |
          echo "quay.io configuration is incomplete, can't push to quay.io. To push built images to quay.io, please ensure the secrets QUAY_REPO, QUAY_USERNAME and QUAY_PASSWORD are created in the project."
          exit 1
      - name: Setup required system packages
        run: |
          sudo apt-get update
          sudo apt-get install krb5-multidev
      - name: Verify latest centos image is present
        run: |
          docker pull centos:7
          docker pull centos/s2i-base-centos7
          docker image ls | grep centos
      - name: Setup virtualenv and install cekit and required packages
        run: |
          sudo pip install virtualenv
          mkdir ~/cekit${{ env.CEKIT_VERSION }}
          virtualenv ~/cekit${{ env.CEKIT_VERSION }}
          . ~/cekit${{ env.CEKIT_VERSION }}/bin/activate
          pip install cekit==${{ env.CEKIT_VERSION }} docker docker-squash odcs behave lxml
      - name: install s2i binary
        run: |
          echo ===== Installing s2i from ${{ env.S2I_URI }} =====
          mkdir /tmp/s2i/ && cd /tmp/s2i/
          curl -s ${{ env.S2I_URI }} \
           | grep browser_download_url \
           | grep linux-amd64 \
           | cut -d '"' -f 4 \
           | wget -qi -
           tar xvf source-to-image*.gz
           sudo mv s2i /usr/bin
           which s2i
           s2i version
      - name: Install helm
        if: env.OPENSHIFT_SERVER != '' && env.OPENSHIFT_TOKEN != ''
        uses: redhat-actions/openshift-tools-installer@v1.1
        with:
          helm: "3"
      - name: Install WildFly charts
        if: env.OPENSHIFT_SERVER != '' && env.OPENSHIFT_TOKEN != ''
        run: |
           helm repo add wildfly https://docs.wildfly.org/wildfly-charts/
           helm search repo wildfly
      - name: Build 
        run: |
          echo "Docker Images prior to build wildfly-s2i images"
          docker image ls
          . ~/cekit${{ env.CEKIT_VERSION }}/bin/activate
          make
          docker image ls
      - name: Push to quay.io
        run: |
            BUILDER_IMAGE_VERSION=$(./tools/release/get-image-version.sh wildfly/wildfly-centos7)
            if [ -z ${BUILDER_IMAGE_VERSION} ]; then
               echo "ERROR no builder image version found"
               exit 1
            fi
            RUNTIME_IMAGE_VERSION=$(./tools/release/get-image-version.sh wildfly/wildfly-runtime-centos7)
            if [ -z ${RUNTIME_IMAGE_VERSION} ]; then
               echo "ERROR no builder image version found"
               exit 1
            fi
            BUILDER_IMAGE="quay.io/${{ secrets.QUAY_REPO }}/wildfly-centos7:${BUILDER_IMAGE_VERSION}"
            RUNTIME_IMAGE="quay.io/${{ secrets.QUAY_REPO }}/wildfly-runtime-centos7:${RUNTIME_IMAGE_VERSION}"

            LATEST_BUILDER_IMAGE="quay.io/${{ secrets.QUAY_REPO }}/wildfly-centos7:latest"
            LATEST_RUNTIME_IMAGE="quay.io/${{ secrets.QUAY_REPO }}/wildfly-runtime-centos7:latest"

            echo Pushing to quay.io
            echo BUILDER_IMAGE: ${BUILDER_IMAGE}
            echo RUNTIME_IMAGE: ${RUNTIME_IMAGE}
            docker login -u="${{ secrets.QUAY_USERNAME }}" -p="${{ secrets.QUAY_PASSWORD }}" quay.io
            docker tag wildfly/wildfly-centos7:${BUILDER_IMAGE_VERSION} ${BUILDER_IMAGE}
            docker tag wildfly/wildfly-centos7:${BUILDER_IMAGE_VERSION} ${LATEST_BUILDER_IMAGE}
            docker push ${BUILDER_IMAGE}
            docker push ${LATEST_BUILDER_IMAGE}
            docker tag wildfly/wildfly-runtime-centos7:${RUNTIME_IMAGE_VERSION} ${RUNTIME_IMAGE}
            docker tag wildfly/wildfly-runtime-centos7:${RUNTIME_IMAGE_VERSION} ${LATEST_RUNTIME_IMAGE}
            docker push ${RUNTIME_IMAGE}
            docker push ${LATEST_RUNTIME_IMAGE}
      - name: Build PostgreSQL example and push to quay.io
        run: |
          s2i build https://github.com/wildfly/wildfly-s2i \
          -e GALLEON_PROVISION_LAYERS=jaxrs-server,postgresql-datasource,observability \
          -r master \
          --context-dir test/test-app-postgres \
          --loglevel=5 \
          quay.io/${{ secrets.QUAY_REPO }}/wildfly-centos7:latest \
          wildfly-s2i-builder-image
          docker tag wildfly-s2i-builder-image:latest quay.io/${{ secrets.QUAY_REPO }}/taskrs-app:latest
          docker push quay.io/${{ secrets.QUAY_REPO }}/taskrs-app:latest
      - name: Build Cluster Bench example and push to quay.io
        run: |
          s2i build https://github.com/clusterbench/clusterbench.git \
          -e MAVEN_ARGS_APPEND=-Pee8 \
          -e S2I_SOURCE_DEPLOYMENTS_DIR=clusterbench-ee8-ear/target \
          -e GALLEON_PROVISION_LAYERS=cloud-server,web-clustering,ejb,-ejb-local-cache,ejb-dist-cache,jsf \
          quay.io/${{ secrets.QUAY_REPO }}/wildfly-centos7:latest \
          wildfly-s2i-builder-image
          docker tag wildfly-s2i-builder-image:latest quay.io/${{ secrets.QUAY_REPO }}/clusterbench:latest
          docker push quay.io/${{ secrets.QUAY_REPO }}/clusterbench:latest
      - name: Log in to OpenShift
        if: env.OPENSHIFT_SERVER != '' && env.OPENSHIFT_TOKEN != ''
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
      - name: Deploy quickstart
        if: env.OPENSHIFT_SERVER != '' && env.OPENSHIFT_TOKEN != ''
        run: |
          # Ignore failure in case helm doesn't exist in cluster
          set +e
          helm uninstall microprofile-config-app
          set -e
          helm install microprofile-config-app \
          wildfly/wildfly \
          -f https://raw.githubusercontent.com/wildfly/wildfly-charts/main/examples/microprofile-config/microprofile-config-app-s2i.yaml \
          --set build.s2i.builderImage=quay.io/${{ secrets.QUAY_REPO }}/wildfly-centos7 \
          --set build.s2i.runtimeImage=quay.io/${{ secrets.QUAY_REPO }}/wildfly-runtime-centos7 \
          --set build.s2i.version=latest
